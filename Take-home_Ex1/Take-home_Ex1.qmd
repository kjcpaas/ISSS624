---
title: "Take Home Exercise 1: Geospatial Analysis for the Public Good"
author: "Kristine Joy Paas"
date: "24 November 2023"
date-modified: "last-modified"
format: html
execute: 
  echo: true
  eval: true
  warning: false
---

# Overview

The aim of this study is to uncover spatial and spatio-temporal mobility patterns of public bus passengers in Singapore.

The main modes of analysis to be used here are Local Indicators of Spatial Association (GLISA) and Emerging Hot Spot Analysis (EHSA).

In doing these study, we will be looking at bus trips started during the hours below.

| Peak hour period             | Bus tap on time |
|------------------------------|-----------------|
| Weekday morning peak         | 6am to 9am      |
| Weekday afternoon peak       | 5pm to 8pm      |
| Weekend/holiday morning peak | 11am to 2pm     |
| Weekend/holiday evening peak | 4pm to 7pm      |

More details about the study can be found [here](https://isss624-ay2023-24nov.netlify.app/take-home_ex01).

# Setup

## Preparing the data sets

### Geospatial

These data sets are in `shp` format.

-   Master Plan 2019 Subzone Boundary (Web), originally from [data.gov.sg](https://data.gov.sg/) but used the one provided on [E-learn](https://elearn.smu.edu.sg/d2l/home/357628).

-   Bus Stop Locations, available publicly from [LTA DataMall](https://datamall.lta.gov.sg/content/datamall/en.html)

### Aspatial

These data sets are in `csv` format.

-   Passenger Volume By Origin Destination Bus Stops from [LTA DataMall](https://datamall.lta.gov.sg/content/datamall/en.html) via API (need to [request for access](https://datamall.lta.gov.sg/content/datamall/en/request-for-api.html))

    -   August 2023

    -   September 2023

    -   October 2023 - we will focus on this as the **main data set**

## Preparing the `data/` directory

Before starting our analysis, we have to organize the data sets in a directory.

-   Geospatial data will be located under `data/geospatial`

-   Aspatial data will be located under `data/aspatial`

-   `data/rds` to be created to store data that we can reuse and to make our code reproduceable.

Finally, we are left with the following file structure:

``` bash
Take-home_Ex1
â”œâ”€â”€ Take-home_Ex1.qmd
â””â”€â”€ data
    â”œâ”€â”€ aspatial
    â”‚   â”œâ”€â”€ origin_destination_bus_202308.csv
    â”‚   â”œâ”€â”€ origin_destination_bus_202309.csv
    â”‚   â””â”€â”€ origin_destination_bus_202310.csv
    â”œâ”€â”€ geospatial
    â”‚   â”œâ”€â”€ BusStop.cpg
    â”‚   â”œâ”€â”€ BusStop.dbf
    â”‚   â”œâ”€â”€ BusStop.lyr
    â”‚   â”œâ”€â”€ BusStop.prj
    â”‚   â”œâ”€â”€ BusStop.sbn
    â”‚   â”œâ”€â”€ BusStop.sbx
    â”‚   â”œâ”€â”€ BusStop.shp
    â”‚   â”œâ”€â”€ BusStop.shp.xml
    â”‚   â”œâ”€â”€ BusStop.shx
    â”‚   â”œâ”€â”€ MPSZ-2019.cpg
    â”‚   â”œâ”€â”€ MPSZ-2019.dbf
    â”‚   â”œâ”€â”€ MPSZ-2019.prj
    â”‚   â”œâ”€â”€ MPSZ-2019.qmd
    â”‚   â”œâ”€â”€ MPSZ-2019.shp
    â”‚   â””â”€â”€ MPSZ-2019.shx
    â””â”€â”€ rds
```

## Setting Up the R Environment

After preparing the data sets, we can finally proceed to load the R packages needed for this study.

-   [**tmap**](https://cran.r-project.org/web/packages/tmap/index.html): for thematic mapping

-   [**sf**](https://cran.r-project.org/web/packages/sf/index.html): for geospatial data handling

-   [**tidyverse**](https://cran.r-project.org/web/packages/tidyverse/index.html): for non-spatial data handling

-   [**sfdep**](https://sfdep.josiahparry.com/): for spatial analysis

```{r}
pacman::p_load(sf, spdep, tmap, tidyverse)
```

# Data Wrangling

After setting up the data sets and the R environment, we can finally proceed with data wrangling.

## Importing data into R environment

### BusStop data set

The `BusStop` data set is a in `shp` format. We can import it by using `st_read()` from the `sf` package.

```{r}
busstops <- st_read(dsn = "data/geospatial",
                    layer = "BusStop")
```

::: callout-tip
As this already uses [**SVY21**](https://app.sla.gov.sg/sirent/About/PlaneCoordinateSystem) datum that is appropriate for Singapore ðŸ‡¸ðŸ‡¬ local context, we can proceed with using data on its own.
:::

Next, let's take a look at the available columns to identify which columns we can use for analysis. We will decide this later after looking at other data sets.

```{r}
glimpse(busstops)
```

Lastly, let's do a quick plot to see a visual glimpse of the data.

```{r}
plot(busstops['BUS_STOP_N'])
```

This is not enough information to do the analysis as we are missing information on which regions of Singapore ðŸ‡¸ðŸ‡¬ the bus stops are located.

### Singapore boundary data

To visualize where the bus stops in Singapore ðŸ‡¸ðŸ‡¬, we need data that shows boundaries covering the country. We will use the **Master Plan 2019 Subzone Boundary (Web)** data set that has been used in class.

As this is also a `shp` file, we will import it the same way as in [BusStop data set].

```{r}
mpsz <- st_read(dsn = "data/geospatial",
                    layer = "MPSZ-2019")
```

::: callout-important
This data frame using the global GPS standard projection, [**WGS84**](https://gisgeography.com/wgs84-world-geodetic-system/). We need to convert this to [**SVY21**](https://app.sla.gov.sg/sirent/About/PlaneCoordinateSystem) that is more appropriate for Singapore ðŸ‡¸ðŸ‡¬ context, and for consistency with the bus stop data.
:::

```{r}
mpsz <- mpsz %>% st_transform(crs=3414)
head(mpsz)
```

Let's do a quick mapping of the boundary map and the bus stops for a visual check.

```{r}
tm_shape(mpsz) +
  tm_fill("lightblue", title = "Singapore Boundary") +
  tm_borders(alpha = 0.5) +
  tm_layout(main.title = "Bus Stop Locations in Singapore",
            main.title.position = "center",
            main.title.size = 1.0,
            legend.height = 0.35, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_shape(busstops) +
  tm_dots(col = "red", size = 0.001, title = "Bus Stops")
```

::: callout-important
Some bus stops on the North are outside of the border. These are the bus stops that for bus routes (e.g. CWx, SJE) the cross the border to **Johor Bahru** in Malaysia ðŸ‡²ðŸ‡¾
:::

### Bus commuter data

Finally, we import the bus commuter data. We will use the **Passenger Volume By Origin Destination Bus Stops** data sets to provide data about bus commuter volumes.

These files are in `csv` file format so we will use `read_csv` to import them.

```{r}
odbus202308 <- read_csv("data/aspatial/origin_destination_bus_202308.csv")
odbus202309 <- read_csv("data/aspatial/origin_destination_bus_202309.csv")
odbus202310 <- read_csv("data/aspatial/origin_destination_bus_202310.csv")
```
